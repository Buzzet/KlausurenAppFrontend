{"version":3,"sources":["./src/app/interaction-module/components/header/header.component.ts","./src/app/interaction-module/components/header/header.component.html","./projects/klausuren-api/src/model/klausurRequest.ts","./src/app/interaction-module/components/dropdown-list/dropdown-list.component.ts","./src/app/interaction-module/components/dropdown-list/dropdown-list.component.html","./src/app/interaction-module/components/success/success.component.ts","./src/app/interaction-module/components/success/success.component.html","./src/app/interaction-module/components/tabs/tabs.component.ts","./src/app/interaction-module/components/tabs/tabs.component.html","./projects/klausuren-api/src/api/api.ts","./src/app/interaction-module/components/klausur-input-selection/klausur-input-selection.component.ts","./src/app/interaction-module/components/klausur-input-selection/klausur-input-selection.component.html","./src/app/interaction-module/components/pdf-viewer/pdf-viewer.component.ts","./src/app/interaction-module/components/pdf-viewer/pdf-viewer.component.html","./projects/klausuren-api/src/api/klausurenController.service.ts","./src/environments/environment.ts","./src/app/login-module/services/register.service.ts","./src/app/login-module/services/e-mail-controller.service.ts","./projects/klausuren-api/src/configuration.ts","./projects/klausuren-api/src/encoder.ts","./src/app/interaction-module/components/post-klausur/post-klausur.component.html","./src/app/interaction-module/components/post-klausur/post-klausur.component.ts","./src/app/login-module/components/register-email-send/register-email-send.component.ts","./src/app/login-module/components/register-email-send/register-email-send.component.html","./src/app/login-module/components/register-password/register-password.component.ts","./src/app/login-module/components/register-password/register-password.component.html","./src/app/login-module/services/login.service.ts","./src/app/login-module/login.module.ts","./projects/klausuren-api/src/model/models.ts","./projects/klausuren-api/src/api.module.ts","./src/app/interaction-module/components/klausur-input/klausur-input.component.ts","./src/app/interaction-module/components/klausur-input/klausur-input.component.html","./src/app/app.component.ts","./src/app/app.component.html","./projects/klausuren-api/src/index.ts","./src/app/login-module/components/login/login.component.ts","./src/app/login-module/components/login/login.component.html","./src/app/app.module.ts","./src/app/user-interface/user-interface.component.ts","./src/app/user-interface/user-interface.component.html","./src/app/interaction-module/interaction.module.ts","./src/app/privacy-policy/privacy-policy.component.ts","./src/app/privacy-policy/privacy-policy.component.html","./projects/klausuren-api/src/variables.ts","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/interaction-module/components/view-klausur/view-klausur.component.ts","./src/app/interaction-module/components/view-klausur/view-klausur.component.html","./projects/klausuren-api/src/model/binary.ts","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/interaction-module/components/klausur-dropdown-selection/klausur-dropdown-selection.component.ts","./src/app/interaction-module/components/klausur-dropdown-selection/klausur-dropdown-selection.component.html","./src/app/login-module/components/register/register.component.html","./src/app/login-module/components/register/register.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;;;;;ACvNO,MAAM,oBAAoB;IAS/B,YAAoB,MAAc,EAAU,YAAwC;QAAhE,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAA4B;QAPpF,eAAU,GAAG,KAAK,CAAC;QAEnB,gBAAW,GAAG,IAAI,CAAC;QACnB,aAAQ,GAAG,EAAE,CAAC;IAIyE,CAAC;IAKxF,QAAQ;IACR,CAAC;IAED,eAAe,CAAC,MAAyB;QACvC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,+CAA+C,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAClG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;aAC/D,SAAS,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAGD,UAAU;QACR,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC;QACjF,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,EAAE,EAAC,EAAC,CAAC,CAAC;IACnE,CAAC;IAGD,gBAAgB,CAAC,MAAc;QAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;IAC7B,CAAC;;wFAzCU,oBAAoB;oGAApB,oBAAoB;QCZjC,yEAAkB;QAChB,gGAAmE;QAAvC,gLAAc,2BAAuB,IAAC;QAAC,4DAA6B;QAChG,mFAAoI;QAA9C,+KAAoB,4BAAwB,IAAC;QAAC,4DAAgB;QAClJ,4EAA2G;QAAvB,4IAAS,gBAAY,IAAC;QAAC,8EAAmB;QAAA,4DAAS;QACvI,yEAA4B;QACxB,uEAA2B;QAAA,oNAAoJ;QAAA,4DAAI;QACvL,4DAAM;QAEV,4DAAM;;QANW,0DAAsB;QAAtB,8EAAsB;QACmB,0DAA6B;QAA7B,qFAA6B;;;;;;;;;;;;;;ACHvF;AAAA;;;;;;;;;;GAUG;;;;;;;;;;;;;;;;;;;;;;ACFI,MAAM,SAAS;IAEpB,YAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;IACtE,CAAC;IACD,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAC1B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;SAC/B;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;IACrC,CAAC;;kEAZU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAC0B;AAC0B;AACc;AACL;AAC1B;AACiB;AACpE;AAC4C;AACgB;AACjB;;;AAElF,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6FAAc,EAAC;IACrC,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iGAAa,EAAE,QAAQ,EAAE;YACpD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,uHAAoB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAC;YAC1E,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,uHAAoB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAC;YAC1E,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,iHAAkB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAC;SAC3E,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAC;IAC9B,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,sGAAiB,EAAC;IACjD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,qIAA0B,EAAC;IAC/D,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,gIAAyB,EAAC;IAClE,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,+FAAsB,EAAC;IAC5D,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,6FAAc,EAAC;CACxC,CAAC;AAAA,CAAC;AAMI,MAAM,gBAAgB;;gGAAhB,gBAAgB;2JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,EAC9C,4DAAY;oIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;AC7BxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;;;;;AAU/D,MAAM,iCAAiC;IAE5C,YAAmB,YAAwC;QAAxC,iBAAY,GAAZ,YAAY,CAA4B;QAQ3D,eAAU,GAAG,IAAI,0DAAY,EAAqB,CAAC;IARY,CAAC;IAUhE,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC;IAC9D,CAAC;IACD,WAAW,CAAC,MAAM;QAChB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,4BAA4B,CAAC,MAAM,CAAC,CAAC;IAC1E,CAAC;IACD,SAAS,CAAC,MAAc;QACtB,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,GAAG,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,oCAAoC,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACvH,CAAC;IACD,OAAO,CAAC,MAAc;QACpB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,EAAC,CAAC,CAAC;IACzH,CAAC;;kHA3BU,iCAAiC;iHAAjC,iCAAiC;QCV9C,mFAAqH;QAAtG,4LAAoB,uBAAmB,IAAC;;QAA8D,4DAAgB;QACrI,mFAAwG;QAAzF,4LAAoB,qBAAiB,IAAC;;QAAmD,4DAAgB;QACxH,mFAAiG;QAAlF,4LAAoB,mBAAe,IAAC;;QAA8C,4DAAgB;;QAFzD,mJAAkC;QACpC,0DAA0B;QAA1B,gJAA0B;QAC5B,0DAAwB;QAAxB,8IAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICqDxE,0EAA4C;IACxC,oEAAG;IAAA,+KAAoH;IAAA,4DAAI;IAC/H,4DAAM;;AC/CH,MAAM,iBAAiB;IAE5B,YAAoB,YAAoC,EAAU,MAAc,EAAS,QAAyB;QAA9F,iBAAY,GAAZ,YAAY,CAAwB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAiB;QAElH,iBAAY,GAAW,EAAE,CAAC;QAC1B,qBAAgB,GAAY,KAAK,CAAC;IAHoF,CAAC;IAIvH,QAAQ;IACR,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAC;YAClC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,OAAO;SACR;QACD,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC,CAAC;QAC5E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1C,CAAC;;kFAjBU,iBAAiB;iGAAjB,iBAAiB;QDV9B,yEAAgB;QACZ,yEAAgB;QAEpB,8DACwF;QADxF,yEACwF;QACxF,2EAAuB;QACvB,gJAGA;QAAA,4DAAQ;QACR,qEAA2D;QAC3D,qEAA4D;QAC5D,qEAA4D;QAC5D,qEAA4D;QAC5D,qEAA8D;QAC9D,sEAA+D;QAC/D,uEAA+D;QAC/D,uEAA+D;QAC/D,uEAKE;QACF,uEAc4F;QAC5F,uEAA6D;QAC7D,4EAA0E;QAAA,yEAAa;QAAA,4DAAO;QAC9F,4DAAM;QAEF,4DAAM;QACN,+DAAwB;QAAxB,2EAAwB;QACpB,qEAAG;QAAA,iQAAiL;QAAA,4DAAI;QAC5L,4DAAM;QAEN,2EAAwB;QACpB,sFAAmC;QAC/B,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,6EAA+F;QAApE,4LAA0B;QAArD,4DAA+F;QACjG,4DAAiB;QACjB,qEAAG;QAAA,2EAAe;QAAA,4DAAI;QAC5B,4DAAM;QACN,gHAEM;QACN,8EAA4G;QAA5B,0IAAS,qBAAiB,IAAC;QAAC,wEAAY;QAAA,4DAAS;QACrI,4DAAM;;QARiC,2DAA0B;QAA1B,qFAA0B;QAIvD,0DAAsB;QAAtB,sFAAsB;;;;;;;;;;;;;;;;;;;;AEvDe;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,MAAM,SAAS,GAAG,GAAG,EAAE;IACrB,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;SAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,IAAG,OAAO,MAAM,CAAC,SAAS,CAAC,KAAK,WAAW,EAAC;IAC1C,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;CAC5D;KAAK;IACJ,SAAS,EAAE,CAAC;CACb;;;;;;;;;;;;ACnBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ion-header>\n  <!--div class=\"body\">\n    <mat-icon class=\"disable-dbl-tap-zoom\" aria-hidden=\"false\" aria-label=\"Example home icon\">arrow_back</mat-icon>\n    <div class=\"logo\">\n      <img src=\"assets/logo-haw.svg\" alt=\"KlausurenAPP Logo\"/>\n    </div>\n  </div-->\n    <ion-toolbar>\n      <ion-title>Klausuren App</ion-title>\n    </ion-toolbar>\n</ion-header>\n","/**\n * KlausurenService\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface KlausurRequest { \n    semester: number;\n    studiengang: string;\n    jahr: string;\n    modul: string;\n    prof?: string;\n    fileArray: Blob;\n    uploadedFrom: string;\n}","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {C} from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'dropdown-list',\n  templateUrl: './dropdown-list.component.html',\n  styleUrls: ['./dropdown-list.component.css']\n})\nexport class DropdownListComponent implements OnInit {\n\n  @Input()\n  list: string[];\n\n  @Input()\n  placeholder: string;\n\n  @Input()\n  disabled: boolean;\n\n  @Output()\n  selectionChanged = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  change(event): void{\n    this.selectionChanged.emit(event.value);\n  }\n\n}\n","<div class=\"list\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>{{ placeholder }}</mat-label>\n    <mat-select (selectionChange)=\"change($event)\" [disabled]=\"list === null || disabled\">\n      <mat-option *ngFor=\"let item of list\" [value]=\"item\">\n        {{item}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.scss']\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ion-card>\n  <ion-card-header>\n    <ion-card-subtitle>Success!</ion-card-subtitle>\n    <ion-card-title>Klausur erfolgreich hochgeladen</ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <div class=\"success-checkmark\">\n      <div class=\"check-icon\">\n        <div class=\"icon-circle\"></div>\n        <span class=\"icon-line line-tip\"></span>\n        <span class=\"icon-line line-long\"></span>\n        <div class=\"icon-fix\"></div>\n      </div>\n    </div>\n    Die Klausur wird nun von unseren Admins geprüft, und anschließend\n    freigegeben und für alle sichtbar.\n  </ion-card-content>\n</ion-card>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.css']\n})\nexport class TabsComponent implements OnInit {\n\n  constructor(public router: Router) { }\n\ncolorView: string = '#FFFFFF';\ncolorPost: string = '#727272';\ncolorProfile: string = '#727272';\ncolorSettings: string = '#727272';\n\n  ngOnInit(): void {\n  }\n\n  onClickView(): void{\n    this.colorPost = '#727272';\n    this.colorView = '#FFFFFF';\n    this.router.navigate(['view']);\n  }\n  onClickPost(): void{\n    this.colorView = '#727273';\n    this.colorPost = '#FFFFFF';\n    this.router.navigate(['post']);\n  }\n\n}\n","<!--div class=\"body\">\n    <div class=\"btn post disable-dbl-tap-zoom\">\n        <mat-icon [inline]=\"true\" [style.color]=\"colorPost\" (click)=\"onClickPost()\">file_upload</mat-icon>\n    </div>\n    <div class=\"btn view disable-dbl-tap-zoom\">\n        <mat-icon [inline]=\"true\" [style.color]=\"this.colorView\" (click)=\"onClickView()\">visibility</mat-icon>\n    </div>\n    <div class=\"btn profile disable-dbl-tap-zoom\">\n\n        <mat-icon [inline]=\"true\">person</mat-icon>\n    </div>\n    <div class=\"btn settings disable-dbl-tap-zoom\">\n        <mat-icon [inline]=\"true\">settings</mat-icon>\n    </div>\n</div-->\n<ion-tabs>\n  <ion-tab-bar slot=\"bottom\">\n    <ion-tab-button tab=\"post\">\n      <ion-icon name=\"cloud-upload-outline\"></ion-icon>\n      <ion-label>Post</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button tab=\"view\">\n      <ion-icon name=\"eye-outline\"></ion-icon>\n      <ion-label>View</ion-label>\n    </ion-tab-button>\n  </ion-tab-bar>\n</ion-tabs>\n","export * from './klausurenController.service';\nimport { KlausurenControllerService } from './klausurenController.service';\nexport const APIS = [KlausurenControllerService];\n","import {Component, OnInit, EventEmitter, Output} from '@angular/core';\nimport {DropDownSelection} from '../../modules/drop-down-selection';\n\n@Component({\n  selector: 'klausur-input-selection',\n  templateUrl: './klausur-input-selection.component.html',\n  styleUrls: ['./klausur-input-selection.component.css']\n})\nexport class KlausurInputSelectionComponent implements OnInit {\n\n  constructor() { }\n  dropDownSelection: DropDownSelection = {studiengang: '', modul: '', semester: 0};\n  semesterList: number[] = [1, 2, 3, 4, 5, 6, 7];\n  studiengang: string;\n  semester: string;\n  modul: string;\n  @Output()\n  output: EventEmitter<DropDownSelection> = new EventEmitter<DropDownSelection>();\n\n  setStudiengang($event: string): void{\n    this.studiengang = $event;\n    this.dropDownSelection.studiengang = $event;\n    this.submitList();\n  }\n  setSemester($event: string): void{\n    this.dropDownSelection.semester = + $event;\n    this.submitList();\n  }\n  setModul($event: string): void{\n    this.dropDownSelection.modul = $event;\n    this.submitList();\n  }\n  ngOnInit(): void {\n  }\n\n  submitList(): void{\n    if (this.dropDownSelection.modul !== '' &&\n      this.dropDownSelection.semester !== 0 && this.dropDownSelection.studiengang !== ''){\n      this.output.emit(this.dropDownSelection);\n    }\n  }\n\n}\n","<klausur-input [label]=\"'Studiengang'\" (value)=\"setStudiengang($event)\"></klausur-input>\n<dropdown-list [placeholder]=\"'Semester'\" [list]=\"semesterList\" (selectionChanged)=\"setSemester($event)\"></dropdown-list>\n<klausur-input [label]=\"'Modul Abkürzung'\" (value)=\"setModul($event)\"></klausur-input>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {environment} from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-pdf-viewer',\n  templateUrl: './pdf-viewer.component.html',\n  styleUrls: ['./pdf-viewer.component.css']\n})\nexport class PdfViewerComponent implements OnInit {\n  source = environment.klausurenService + '/klausur/anzeigen/';\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.source = this.source + params?.id;\n    });\n  }\n\n}\n","<div class=\"body\">\n<ion-content>\n  <ngx-extended-pdf-viewer [src]=\"this.source\" useBrowserLocale=\"true\" height=\"100vh\" ></ngx-extended-pdf-viewer>\n</ion-content>\n</div>\n","/**\n * KlausurenService\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Klausur } from '../model/klausur';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class KlausurenControllerService {\n\n    protected basePath = 'http://87.237.54.34:8201';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param semester \n     * @param studiengang \n     * @param jahr \n     * @param modul \n     * @param prof \n     * @param fileArray \n     * @param uploadedFrom \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addKlausurForm(semester?: number, studiengang?: string, jahr?: string, modul?: string, prof?: string, fileArray?: Blob, uploadedFrom?: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public addKlausurForm(semester?: number, studiengang?: string, jahr?: string, modul?: string, prof?: string, fileArray?: Blob, uploadedFrom?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public addKlausurForm(semester?: number, studiengang?: string, jahr?: string, modul?: string, prof?: string, fileArray?: Blob, uploadedFrom?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public addKlausurForm(semester?: number, studiengang?: string, jahr?: string, modul?: string, prof?: string, fileArray?: Blob, uploadedFrom?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n        let headers = this.defaultHeaders;\n\n        // authentication (bearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'multipart/form-data'\n        ];\n\n        const canConsumeForm = this.canConsumeForm(consumes);\n\n        let formParams: { append(param: string, value: any): void; };\n        let useForm = false;\n        let convertFormParamsToString = false;\n        // use FormData to transmit files using content-type \"multipart/form-data\"\n        // see https://stackoverflow.com/questions/4007969/application-x-www-form-urlencoded-or-multipart-form-data\n        useForm = canConsumeForm;\n        if (useForm) {\n            formParams = new FormData();\n        } else {\n            formParams = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        }\n\n        if (semester !== undefined) {\n            formParams = formParams.append('semester', <any>semester) as any || formParams;\n        }\n        if (studiengang !== undefined) {\n            formParams = formParams.append('studiengang', <any>studiengang) as any || formParams;\n        }\n        if (jahr !== undefined) {\n            formParams = formParams.append('jahr', <any>jahr) as any || formParams;\n        }\n        if (modul !== undefined) {\n            formParams = formParams.append('modul', <any>modul) as any || formParams;\n        }\n        if (prof !== undefined) {\n            formParams = formParams.append('prof', <any>prof) as any || formParams;\n        }\n        if (fileArray !== undefined) {\n            formParams = formParams.append('fileArray', <any>fileArray) as any || formParams;\n        }\n        if (uploadedFrom !== undefined) {\n            formParams = formParams.append('uploadedFrom', <any>uploadedFrom) as any || formParams;\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/klausur/hochladen`,\n            {\n                body: convertFormParamsToString ? formParams.toString() : formParams,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param studiengang \n     * @param semester \n     * @param modul \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllKlausurenByStudiengangAndSemesterAndModul(studiengang: string, semester: number, modul: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Klausur>>;\n    public getAllKlausurenByStudiengangAndSemesterAndModul(studiengang: string, semester: number, modul: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Klausur>>>;\n    public getAllKlausurenByStudiengangAndSemesterAndModul(studiengang: string, semester: number, modul: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Klausur>>>;\n    public getAllKlausurenByStudiengangAndSemesterAndModul(studiengang: string, semester: number, modul: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (studiengang === null || studiengang === undefined) {\n            throw new Error('Required parameter studiengang was null or undefined when calling getAllKlausurenByStudiengangAndSemesterAndModul.');\n        }\n\n        if (semester === null || semester === undefined) {\n            throw new Error('Required parameter semester was null or undefined when calling getAllKlausurenByStudiengangAndSemesterAndModul.');\n        }\n\n        if (modul === null || modul === undefined) {\n            throw new Error('Required parameter modul was null or undefined when calling getAllKlausurenByStudiengangAndSemesterAndModul.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (bearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<Klausur>>('get',`${this.basePath}/klausur/klausuren/${encodeURIComponent(String(studiengang))}/${encodeURIComponent(String(semester))}/${encodeURIComponent(String(modul))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param studiengang \n     * @param semester \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllModuleByStudiengangAndSemester(studiengang: string, semester: number, observe?: 'body', reportProgress?: boolean): Observable<Array<string>>;\n    public getAllModuleByStudiengangAndSemester(studiengang: string, semester: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<string>>>;\n    public getAllModuleByStudiengangAndSemester(studiengang: string, semester: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<string>>>;\n    public getAllModuleByStudiengangAndSemester(studiengang: string, semester: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (studiengang === null || studiengang === undefined) {\n            throw new Error('Required parameter studiengang was null or undefined when calling getAllModuleByStudiengangAndSemester.');\n        }\n\n        if (semester === null || semester === undefined) {\n            throw new Error('Required parameter semester was null or undefined when calling getAllModuleByStudiengangAndSemester.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (bearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<string>>('get',`${this.basePath}/klausur/module/${encodeURIComponent(String(studiengang))}/${encodeURIComponent(String(semester))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param studiengang \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllSemestersByStudiengang(studiengang: string, observe?: 'body', reportProgress?: boolean): Observable<Array<number>>;\n    public getAllSemestersByStudiengang(studiengang: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<number>>>;\n    public getAllSemestersByStudiengang(studiengang: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<number>>>;\n    public getAllSemestersByStudiengang(studiengang: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (studiengang === null || studiengang === undefined) {\n            throw new Error('Required parameter studiengang was null or undefined when calling getAllSemestersByStudiengang.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (bearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<number>>('get',`${this.basePath}/klausur/semester/${encodeURIComponent(String(studiengang))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllStudiengaenge(observe?: 'body', reportProgress?: boolean): Observable<Array<string>>;\n    public getAllStudiengaenge(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<string>>>;\n    public getAllStudiengaenge(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<string>>>;\n    public getAllStudiengaenge(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // authentication (bearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<string>>('get',`${this.basePath}/klausur/studiengaenge`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getKlausur(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getKlausur(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getKlausur(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getKlausur(id: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getKlausur.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (bearerAuth) required\n        if (this.configuration.accessToken) {\n            const accessToken = typeof this.configuration.accessToken === 'function'\n                ? this.configuration.accessToken()\n                : this.configuration.accessToken;\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\n        }\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('get',`${this.basePath}/klausur/anzeigen/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  klausurenService: 'http://87.237.54.34:8201',\n  emailValidationService: 'http://87.237.54.34:8202',\n  nutzerService: 'http://87.237.54.34:8203'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from '../modules/user';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http: HttpClient) { }\n\n  url = environment.nutzerService + '/users/userPersistence';\n\n  register(user: User): void{\n    this.http.post(this.url, user).subscribe(ref => {});\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EMailControllerService {\n\n  constructor(private http: HttpClient) { }\n  url = environment.emailValidationService;\n  public postEmailToService(eMail: string): boolean{\n      this.http.post(this.url + '/emailVerification', eMail).subscribe(ref => {\n        console.log(ref);\n      }, error => {\n        console.log(error);\n      });\n      return true;\n  }\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","    import { HttpUrlEncodingCodec } from '@angular/common/http';\n\n/**\n* CustomHttpUrlEncodingCodec\n* Fix plus sign (+) not encoding, so sent as blank space\n* See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n*/\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n    encodeKey(k: string): string {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v: string): string {\n        v = super.encodeValue(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n\n","<ion-content>\n<div class=\"body\">\n  <klausur-dropdown-selection *ngIf=\"!newKlausur\" (validInput)=\"setSelection($event)\"></klausur-dropdown-selection>\n  <klausur-input-selection (output)=\"setSelection($event)\" *ngIf=\"newKlausur\"></klausur-input-selection>\n  <dropdown-list [list]=\"this.yearList\" [disabled]=\"disableYear\" [placeholder]=\"'Jahr'\" (selectionChanged)=\"selectionChanged($event)\"></dropdown-list>\n  <p *ngIf=\"!newKlausur\">Klausur nicht in der Liste?</p>\n  <button mat-raised-button color=\"accent\" class=\"btn\" (click)=\"onClickNewKlausur()\">{{newKlausur ? 'Klausur auswählen' : 'Selber eintragen'}}</button>\n    <div class=\"uploadBtn\">\n      <label for=\"file-upload\" class=\"custom-file-upload\">\n        <mat-icon class=\"uploadIcon\">upload_file</mat-icon>\n      </label>\n      <input id=\"file-upload\" type=\"file\" #fileInput (change)=\"onFileInput(fileInput.files)\" style=\"display: none;\"/>\n    </div>\n  <div *ngIf=\"files !== undefined && files.length > 0\" class=\"files\">\n    <p>{{files.item(0).name}}</p>\n    <button mat-icon-button color=\"warn\" (click)=\"deleteFileArray()\">\n      <mat-icon>delete</mat-icon>\n    </button>\n  </div>\n  <div class=\"checkbox\">\n    <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checkboxChecked\">Hiermit bestätige ich,<br> dass ich die Nutzungsrechte an der <br> hochgeladenen Klausur besitze.</mat-checkbox>\n  </div>\n    <button mat-raised-button color=\"primary\" class=\"btn\" [disabled]=\"btnKlausurDisable || !checkboxChecked\" (click)=\"upload()\">Klausur Hochladen</button>\n  <app-success *ngIf=\"uploadSuccessfull\" (click)=\"onClickSuccessMessage()\"></app-success>\n</div>\n</ion-content>\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport { HttpClient, HttpEventType, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { KlausurenService } from '../../services/klausuren.service';\nimport {DropDownSelection} from '../../modules/drop-down-selection';\nimport {ApiModule, KlausurenControllerService} from '../../../../../projects/klausuren-api/src';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-post-klausur',\n  templateUrl: './post-klausur.component.html',\n  styleUrls: ['./post-klausur.component.css']\n})\nexport class PostKlausurComponent implements OnInit {\n  progress;\n  files: FileList;\n  btnKlausurDisable = true;\n  newKlausur = false;\n  yearList: string[] = [];\n  inputSet = false;\n  fileSet = false;\n  dropDownSelection: DropDownSelection;\n  disableYear = true;\n  checkboxChecked = false;\n  year: string;\n  uploadSuccessfull = false;\n  constructor(private klausrenAPI: KlausurenControllerService, private router: Router) { }\n  ngOnInit(): void {\n    this.fillDropDownYear();\n  }\n\n  onFileInput(files: FileList): void {\n    this.fileSet = true;\n    if (this.inputSet){\n      this.btnKlausurDisable = false;\n    }\n    this.files = files;\n  }\n\n  upload(): void{\n    console.log(this.files);\n    this.klausrenAPI.addKlausurForm(this.dropDownSelection.semester, this.dropDownSelection.studiengang, this.year,\n      this.dropDownSelection.modul, '', this.files[0], localStorage.getItem('klausuren-user')).subscribe(ele => {console.log(ele); }, error => {\n        if (error?.status === 200){\n          this.uploadSuccessfull = true;\n        }\n      }\n    );\n  }\n\n  selectionChanged($event: string): void {\n   if (this.fileSet){\n     this.btnKlausurDisable = false;\n   }\n   this.inputSet = true;\n   this.year = $event;\n  }\n\n  setSelection($event: DropDownSelection): void {\n    console.log($event);\n    this.dropDownSelection = $event;\n    this.disableYear = false;\n  }\n\n  private fillDropDownYear(): void{\n    const currentYear = new Date().getFullYear();\n    for (let i = currentYear; i >= 2010; i--){\n      const nextYear = i + 1;\n      this.yearList.push('WS' + i + '/' + nextYear);\n      this.yearList.push('SS' + i);\n    }\n  }\n\n  onClickNewKlausur(): void {\n    console.log(\"click\");\n    this.newKlausur = ! this.newKlausur;\n    if (this.newKlausur){\n      this.disableYear = false;\n    }else {\n      this.disableYear = true;\n    }\n  }\n\n  onClickSuccessMessage(): void {\n    this.uploadSuccessfull = false;\n    this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\n      this.router.navigate(['post']);\n    });\n  }\n\n  deleteFileArray(): void {\n    console.log(this.files);\n    this.files = undefined;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-email-send',\n  templateUrl: './register-email-send.component.html',\n  styleUrls: ['./register-email-send.component.css']\n})\nexport class RegisterEmailSendComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=body>\n    <div class=logo>\n               <!-- Generator: Adobe Illustrator 25.2.2, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\nviewBox=\"0 0 194 85.5\" style=\"enable-background:new 0 0 194 85.5;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n.st0{fill:#ffffff;}\n.st1{font-family:'OpenSans-Regular';}\n.st2{font-size:12px;}\n</style>\n<rect x=\"0\" y=\"0.1\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"0\" y=\"13.4\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"0\" y=\"26.7\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"0\" y=\"40.1\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"13.3\" y=\"6.7\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"13.3\" y=\"20.1\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"13.3\" y=\"33.4\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"13.3\" y=\"46.7\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<path class=\"st0\" d=\"M121.8,0.1h-3.5l-2.1,9.1c-0.1,0.5-0.3,1.3-0.5,2.1c-0.2,0.9-0.3,1.6-0.4,2.2c-0.1-0.6-0.2-1.4-0.4-2.2\nc-0.2-0.9-0.3-1.5-0.4-1.9l-2.4-9.3h-3.3l-2.4,9.3c-0.1,0.5-0.3,1.2-0.5,2.1c-0.2,0.9-0.3,1.6-0.3,2c-0.2-1.2-0.4-2.7-0.8-4.4\nl-2.1-9.1h-3.5l4.2,16.7h4l2.2-8.7c0.1-0.4,0.2-1,0.4-1.9c0.2-0.9,0.3-1.6,0.3-2c0,0.3,0.1,1,0.3,2c0.2,1,0.3,1.6,0.4,1.9l2.3,8.7h4\nL121.8,0.1z M87.4,9.8c1.2-3.8,1.9-6.2,2.2-7.2c0.1,0.3,0.2,0.6,0.3,1.1c0.1,0.5,0.8,2.5,1.9,6.1L87.4,9.8L87.4,9.8z M97.6,16.7\nL91.7,0h-4.3l-5.9,16.7h3.8l1.2-4h6.1l1.2,4H97.6z M77,0.1h-3.5v6.5h-6.6V0.1h-3.5v16.7h3.5V9.5h6.6v7.2H77C77,16.7,77,0.1,77,0.1z\"\n/>\n<path class=\"st0\" d=\"M187,37h3.2v3.5c-0.8,0.2-1.5,0.2-2.2,0.2c-1.4,0-2.5-0.5-3.2-1.4c-0.7-1-1.1-2.3-1.1-4.1\nc0-1.7,0.5-3.1,1.4-4.1c0.9-1,2.1-1.5,3.7-1.5c1.3,0,2.6,0.3,3.8,0.9l1.2-2.8c-1.6-0.7-3.2-1-4.9-1c-2.7,0-4.9,0.8-6.4,2.3\nc-1.5,1.5-2.3,3.6-2.3,6.3c0,2.8,0.7,4.9,2,6.4c1.3,1.5,3.2,2.2,5.8,2.2c1,0,2-0.1,2.9-0.2c0.9-0.1,2-0.4,3-0.7v-8.6H187L187,37\nL187,37z M169,37l4,6.4h3.9c-0.8-1.1-2.4-3.5-4.9-7.3c1-0.4,1.8-1,2.3-1.8c0.5-0.8,0.8-1.6,0.8-2.6c0-1.7-0.5-2.9-1.6-3.8\nc-1.1-0.8-2.8-1.2-5-1.2h-4.9v16.7h3.5V37H169z M167.1,29.7h1.1c1.1,0,2,0.2,2.5,0.5c0.5,0.3,0.8,0.9,0.8,1.7c0,0.8-0.3,1.4-0.8,1.8\nc-0.5,0.4-1.4,0.6-2.5,0.6h-1.1V29.7z M153.9,26.8v10.2c0,1.3-0.3,2.2-0.8,2.8c-0.5,0.6-1.4,0.9-2.5,0.9c-1.2,0-2-0.3-2.6-0.9\nc-0.5-0.6-0.8-1.5-0.8-2.8V26.8h-3.5v10.7c0,1.9,0.6,3.4,1.8,4.5c1.2,1.1,2.8,1.6,5,1.6c1.4,0,2.7-0.2,3.7-0.7\nc1-0.5,1.8-1.2,2.4-2.1c0.6-0.9,0.8-2,0.8-3.2V26.8H153.9z M131.9,36.2c2,0,3,0.7,3,2.1c0,0.8-0.2,1.3-0.7,1.7\nc-0.5,0.4-1.2,0.6-2.2,0.6h-2.3v-4.3L131.9,36.2L131.9,36.2z M129.7,29.7h1.9c1,0,1.7,0.1,2.2,0.4c0.5,0.3,0.7,0.7,0.7,1.4\nc0,0.7-0.2,1.2-0.6,1.5c-0.4,0.3-1.1,0.4-2.1,0.4h-2.1V29.7z M126.1,43.4h6.2c1.9,0,3.4-0.4,4.5-1.3c1.1-0.9,1.6-2,1.6-3.6\nc0-1.1-0.2-1.9-0.7-2.6c-0.5-0.6-1.2-1.1-2.3-1.3v-0.1c0.8-0.1,1.4-0.5,1.9-1.2c0.5-0.6,0.7-1.5,0.7-2.4c0-1.5-0.5-2.5-1.6-3.2\nc-1.1-0.7-2.8-1-5.1-1h-5.2V43.4z M112.4,43.4l4.3-13h0.1c-0.1,2.1-0.1,3.4-0.2,3.9c0,0.5,0,0.9,0,1.3v7.9h3.3V26.8h-4.8l-4.2,12.7\nh-0.1l-3.9-12.7h-4.8v16.7h3.2v-7.7c0-0.9-0.1-2.7-0.2-5.3h0.1l4,13.1H112.4z M87.4,36.5c1.2-3.8,1.9-6.2,2.2-7.2\nc0.1,0.3,0.2,0.6,0.3,1.1c0.1,0.5,0.8,2.5,1.9,6.1L87.4,36.5L87.4,36.5z M97.6,43.4l-5.9-16.7h-4.3l-5.9,16.7h3.8l1.2-4h6.1l1.2,4\nH97.6z M77,26.8h-3.5v6.5h-6.6v-6.5h-3.5v16.7h3.5v-7.2h6.6v7.2H77C77,43.4,77,26.8,77,26.8z\"/>\n<rect x=\"63.2\" y=\"54.7\" class=\"st0\" width=\"53\" height=\"3.3\"/>\n<text transform=\"matrix(1.1183 0 0 1 70.1475 74.959)\" class=\"st0 st1 st2\">KLAUSUREN APP</text>\n</svg> \n       \n    </div>\n<div class=\"text\">\n    <p>Vielen Dank für Ihre Gedult. Wir prüfen ihre eMail-Adresse und senden Ihnen zeitnah einen Bestätigungslink zu.</p>\n</div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, ParamMap, convertToParamMap} from '@angular/router';\nimport {User} from '../../modules/user';\nimport {RegisterService} from '../../services/register.service';\n\n@Component({\n  selector: 'app-register-password',\n  templateUrl: './register-password.component.html',\n  styleUrls: ['./register-password.component.css']\n})\nexport class RegisterPasswordComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private regSvc: RegisterService, private router: Router) { }\n\n  email = 'test123';\n  pw = '';\n  hide = true;\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.email = atob(params.email);\n      console.log(this.email);\n    });\n  }\n\n  onClickRegister(): void{\n    const user: User = {\n      userPassword: this.pw,\n      userMail: this.email\n    };\n    this.regSvc.register(user);\n    this.router.navigateByUrl('/');\n  }\n\n}\n","<div class=body>\n    <div class=logo>\n               <!-- Generator: Adobe Illustrator 25.2.2, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\nviewBox=\"0 0 194 85.5\" style=\"enable-background:new 0 0 194 85.5;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n.st0{fill:#ffffff;}\n.st1{font-family:'OpenSans-Regular';}\n.st2{font-size:12px;}\n</style>\n<rect x=\"0\" y=\"0.1\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"0\" y=\"13.4\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"0\" y=\"26.7\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"0\" y=\"40.1\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"13.3\" y=\"6.7\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"13.3\" y=\"20.1\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"13.3\" y=\"33.4\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"13.3\" y=\"46.7\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<path class=\"st0\" d=\"M121.8,0.1h-3.5l-2.1,9.1c-0.1,0.5-0.3,1.3-0.5,2.1c-0.2,0.9-0.3,1.6-0.4,2.2c-0.1-0.6-0.2-1.4-0.4-2.2\nc-0.2-0.9-0.3-1.5-0.4-1.9l-2.4-9.3h-3.3l-2.4,9.3c-0.1,0.5-0.3,1.2-0.5,2.1c-0.2,0.9-0.3,1.6-0.3,2c-0.2-1.2-0.4-2.7-0.8-4.4\nl-2.1-9.1h-3.5l4.2,16.7h4l2.2-8.7c0.1-0.4,0.2-1,0.4-1.9c0.2-0.9,0.3-1.6,0.3-2c0,0.3,0.1,1,0.3,2c0.2,1,0.3,1.6,0.4,1.9l2.3,8.7h4\nL121.8,0.1z M87.4,9.8c1.2-3.8,1.9-6.2,2.2-7.2c0.1,0.3,0.2,0.6,0.3,1.1c0.1,0.5,0.8,2.5,1.9,6.1L87.4,9.8L87.4,9.8z M97.6,16.7\nL91.7,0h-4.3l-5.9,16.7h3.8l1.2-4h6.1l1.2,4H97.6z M77,0.1h-3.5v6.5h-6.6V0.1h-3.5v16.7h3.5V9.5h6.6v7.2H77C77,16.7,77,0.1,77,0.1z\"\n/>\n<path class=\"st0\" d=\"M187,37h3.2v3.5c-0.8,0.2-1.5,0.2-2.2,0.2c-1.4,0-2.5-0.5-3.2-1.4c-0.7-1-1.1-2.3-1.1-4.1\nc0-1.7,0.5-3.1,1.4-4.1c0.9-1,2.1-1.5,3.7-1.5c1.3,0,2.6,0.3,3.8,0.9l1.2-2.8c-1.6-0.7-3.2-1-4.9-1c-2.7,0-4.9,0.8-6.4,2.3\nc-1.5,1.5-2.3,3.6-2.3,6.3c0,2.8,0.7,4.9,2,6.4c1.3,1.5,3.2,2.2,5.8,2.2c1,0,2-0.1,2.9-0.2c0.9-0.1,2-0.4,3-0.7v-8.6H187L187,37\nL187,37z M169,37l4,6.4h3.9c-0.8-1.1-2.4-3.5-4.9-7.3c1-0.4,1.8-1,2.3-1.8c0.5-0.8,0.8-1.6,0.8-2.6c0-1.7-0.5-2.9-1.6-3.8\nc-1.1-0.8-2.8-1.2-5-1.2h-4.9v16.7h3.5V37H169z M167.1,29.7h1.1c1.1,0,2,0.2,2.5,0.5c0.5,0.3,0.8,0.9,0.8,1.7c0,0.8-0.3,1.4-0.8,1.8\nc-0.5,0.4-1.4,0.6-2.5,0.6h-1.1V29.7z M153.9,26.8v10.2c0,1.3-0.3,2.2-0.8,2.8c-0.5,0.6-1.4,0.9-2.5,0.9c-1.2,0-2-0.3-2.6-0.9\nc-0.5-0.6-0.8-1.5-0.8-2.8V26.8h-3.5v10.7c0,1.9,0.6,3.4,1.8,4.5c1.2,1.1,2.8,1.6,5,1.6c1.4,0,2.7-0.2,3.7-0.7\nc1-0.5,1.8-1.2,2.4-2.1c0.6-0.9,0.8-2,0.8-3.2V26.8H153.9z M131.9,36.2c2,0,3,0.7,3,2.1c0,0.8-0.2,1.3-0.7,1.7\nc-0.5,0.4-1.2,0.6-2.2,0.6h-2.3v-4.3L131.9,36.2L131.9,36.2z M129.7,29.7h1.9c1,0,1.7,0.1,2.2,0.4c0.5,0.3,0.7,0.7,0.7,1.4\nc0,0.7-0.2,1.2-0.6,1.5c-0.4,0.3-1.1,0.4-2.1,0.4h-2.1V29.7z M126.1,43.4h6.2c1.9,0,3.4-0.4,4.5-1.3c1.1-0.9,1.6-2,1.6-3.6\nc0-1.1-0.2-1.9-0.7-2.6c-0.5-0.6-1.2-1.1-2.3-1.3v-0.1c0.8-0.1,1.4-0.5,1.9-1.2c0.5-0.6,0.7-1.5,0.7-2.4c0-1.5-0.5-2.5-1.6-3.2\nc-1.1-0.7-2.8-1-5.1-1h-5.2V43.4z M112.4,43.4l4.3-13h0.1c-0.1,2.1-0.1,3.4-0.2,3.9c0,0.5,0,0.9,0,1.3v7.9h3.3V26.8h-4.8l-4.2,12.7\nh-0.1l-3.9-12.7h-4.8v16.7h3.2v-7.7c0-0.9-0.1-2.7-0.2-5.3h0.1l4,13.1H112.4z M87.4,36.5c1.2-3.8,1.9-6.2,2.2-7.2\nc0.1,0.3,0.2,0.6,0.3,1.1c0.1,0.5,0.8,2.5,1.9,6.1L87.4,36.5L87.4,36.5z M97.6,43.4l-5.9-16.7h-4.3l-5.9,16.7h3.8l1.2-4h6.1l1.2,4\nH97.6z M77,26.8h-3.5v6.5h-6.6v-6.5h-3.5v16.7h3.5v-7.2h6.6v7.2H77C77,43.4,77,26.8,77,26.8z\"/>\n<rect x=\"63.2\" y=\"54.7\" class=\"st0\" width=\"53\" height=\"3.3\"/>\n<text transform=\"matrix(1.1183 0 0 1 70.1475 74.959)\" class=\"st0 st1 st2\">KLAUSUREN APP</text>\n</svg>\n\n    </div>\n\n<div class=\"checkMark\">\n<!-- Generator: Adobe Illustrator 25.2.2, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 100 100\" style=\"enable-background:new 0 0 100 100;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.check{fill:#3AAA35;}\n</style>\n<rect x=\"13.34\" y=\"58.82\" transform=\"matrix(0.7472 0.6646 -0.6646 0.7472 49.1209 -4.77)\" class=\"check\" width=\"34.98\" height=\"6.72\"/>\n<rect x=\"30.08\" y=\"50.09\" transform=\"matrix(-0.6646 0.7472 -0.7472 -0.6646 136.3611 45.6979)\" class=\"check\" width=\"55.68\" height=\"6.72\"/>\n</svg>\n</div>\n<div class=\"text\">\n    <p>Deine E-Mail Adresse wurde erfolgreich bestätigt. Bitte vergeben Sie jetzt ihr Passwort!</p>\n</div>\n<div class=\"credentials\">\n    <mat-form-field class=\"loginInput\">\n        <mat-label>E-Mail</mat-label>\n        <input matInput [value]=\"this.email\" disabled=true>\n      </mat-form-field>\n      <mat-form-field class=\"loginInput\">\n        <mat-label>Password</mat-label>\n        <input [(ngModel)]=\"pw\" [type]=\"hide ? 'password' : 'text'\" matInput placeholder=\"Nicht dein HAW Passwort!\">\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n      </mat-form-field>\n</div>\n<button mat-raised-button color=\"primary\" (click)=\"onClickRegister()\">Registrieren</button>\n    </div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {LoginResponse} from '../../login-response';\nimport {User} from '../modules/user';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {RouteConfigLoadStart, Router} from '@angular/router';\nimport {environment} from '../../../environments/environment';\nimport { Configuration, KlausurenControllerService } from 'projects/klausuren-api/src';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n\n  private loginSubject$ = new Subject<LoginResponse>();\n\n  login$ = this.loginSubject$.asObservable();\n  public jwt = '';\n\n  loggedInSubject$ = new BehaviorSubject<boolean>(false);\n\n  loggedIn$ = this.loggedInSubject$.asObservable();\n\n  private url = environment.nutzerService + '/users/login';\n\n  constructor(private http: HttpClient, router: Router, private klausurenApi: KlausurenControllerService) { }\n\n static getApiConfiguration(): Configuration {\n    return new Configuration({basePath: environment.klausurenService});\n  }\n\n  async autoLogIn(): Promise<LoginResponse>{\n    if (localStorage.getItem('klausuren-user')){\n      const user: User = {userPassword: localStorage.getItem('klausuren-pw'), userMail: localStorage.getItem('klausuren-user')};\n      return this.logIn(user);\n    }\n  }\n\n  async logIn(user: User): Promise<LoginResponse>{\n    const response = await this.http.post<LoginResponse>(this.url, user).toPromise();\n    this.loginSubject$.next(response);\n    if (response.jwtBearer !== null){\n      this.jwt = response.jwtBearer;\n      this.loggedInSubject$.next(true);\n      localStorage.setItem('klausuren-user', user.userMail);\n      localStorage.setItem('klausuren-pw', user.userPassword);\n    }\n    this.klausurenApi.configuration.accessToken = this.jwt;\n    return response;\n  }\n\n  getApiConfiguration(){\n    return null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {LoginComponent} from './components/login/login.component';\nimport {FormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {RegisterComponent} from './components/register/register.component';\nimport {RegisterEmailSendComponent} from './components/register-email-send/register-email-send.component';\nimport {RegisterPasswordComponent} from './components/register-password/register-password.component';\nimport {IonicModule} from '@ionic/angular';\n\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    RegisterEmailSendComponent,\n    RegisterPasswordComponent\n  ],\n    imports: [\n        CommonModule,\n        MatInputModule,\n        MatIconModule,\n        MatButtonModule,\n        FormsModule,\n        IonicModule\n    ],\n  exports: [\n    LoginComponent,\n    RegisterComponent,\n    RegisterEmailSendComponent,\n    RegisterPasswordComponent\n  ]\n})\nexport class LoginModule { }\n","export * from './binary';\nexport * from './klausur';\nexport * from './klausurRequest';\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { KlausurenControllerService } from './api/klausurenController.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    KlausurenControllerService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders<any> {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'klausur-input',\n  templateUrl: './klausur-input.component.html',\n  styleUrls: ['./klausur-input.component.css']\n})\nexport class KlausurInputComponent implements OnInit {\n\n  @Input()\n  label: string;\n\n  inputValue: string;\n\n  @Output()\n  value = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-form-field class=\"form-field\" >\n  <mat-label>{{this.label}}</mat-label>\n  <input matInput type=\"text\" (blur)=\"this.value.emit(this.inputValue)\" [(ngModel)]=\"this.inputValue\" required>\n</mat-form-field>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n  title = 'KlausurenApp';\n}\n","<!--router-outlet></router-outlet-->\n  <app-user-interface></app-user-interface>\n","export * from './api/api';\nexport * from './model/models';\nexport * from './variables';\nexport * from './configuration';\nexport * from './api.module';","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {LoginService} from '../../services/login.service';\nimport {User} from '../../modules/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  mail = '';\n  pw = '';\n\n  constructor(public router: Router, private loginService: LoginService) { }\n\n  async ngOnInit(): Promise<void> {\n    if (localStorage.getItem('klausuren-user')){\n      await this.loginService.autoLogIn();\n      this.router.navigateByUrl('klausuren/view');\n    }\n  }\n\n\n  async onClickLogin(): Promise<void>{\n    const user: User = {\n      userMail: this.mail,\n      userPassword: this.pw,\n    };\n    const promise = await this.loginService.logIn(user);\n    this.router.navigateByUrl('klausuren/view');\n  }\n\n  onClickRegister(): void{\n    this.router.navigateByUrl('klausuren/register');\n  }\n}\n","<ion-content>\n<div class=\"body\">\n    <div class=\"logo\">\n      <img class=\"logoHAW\" src=\"assets/logo.svg\" alt=\"logo klausurenapp\"/>\n    </div>\n\n    <div class=\"credentials\">\n        <mat-form-field class=\"loginInput\">\n            <mat-label>E-Mail</mat-label>\n            <input matInput [(ngModel)]=\"mail\" placeholder=\"Your HAW-Mail\">\n          </mat-form-field>\n          <mat-form-field class=\"loginInput\">\n            <mat-label>Password</mat-label>\n            <input [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"pw\" matInput placeholder=\"Nicht dein HAW Passwort!\">\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n          </mat-form-field>\n    </div>\n    <button mat-raised-button color=\"primary\" (click)=\"onClickLogin()\">Login</button>\n    <button mat-button style=\"margin-top: 2vh;\" (click)=\"onClickRegister()\">Registrieren</button>\n</div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {LoginModule} from './login-module/login.module';\nimport {InteractionModule} from './interaction-module/interaction.module';\nimport {UserInterfaceComponent} from './user-interface/user-interface.component';\nimport { PrivacyPolicyComponent } from './privacy-policy/privacy-policy.component';\nimport {IonicModule, IonicRouteStrategy} from '@ionic/angular';\nimport { ApiModule } from 'projects/klausuren-api/src';\nimport { LoginService } from './login-module/services/login.service';\nimport {RouteReuseStrategy} from '@angular/router';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserInterfaceComponent,\n    PrivacyPolicyComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatInputModule,\n    FormsModule,\n    HttpClientModule,\n    LoginModule,\n    IonicModule.forRoot(),\n    ApiModule.forRoot(LoginService.getApiConfiguration),\n    InteractionModule\n  ],\n  providers: [{provide: RouteReuseStrategy, useClass: IonicRouteStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {LoginService} from '../login-module/services/login.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-user-interface',\n  templateUrl: './user-interface.component.html',\n  styleUrls: ['./user-interface.component.css']\n})\nexport class UserInterfaceComponent implements OnInit {\n\n  constructor(public loginService: LoginService, private router: Router) { }\n\n  ngOnInit(): void {\n    // Use matchMedia to check the user preference\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');\n\n    this.toggleDarkTheme(prefersDark.matches);\n\n// Listen for changes to the prefers-color-scheme media query\n    prefersDark.addListener((mediaQuery) => this.toggleDarkTheme(mediaQuery.matches));\n  }\n  toggleDarkTheme(shouldAdd): void {\n    document.body.classList.toggle('darkMode', shouldAdd);\n  }\n  isIPhoneCordovaApp(): boolean{\n    if (document.location.protocol === 'file:' && navigator.userAgent.toLocaleLowerCase().indexOf('iphone') !== -1){\n      return true;\n    }\n    return false;\n  }\n\n}\n","<div class=\"body\">\n  <ion-app class=\"body\">\n    <app-header></app-header>\n    <div class=\"router\">\n        <ion-router-outlet></ion-router-outlet>\n    </div>\n  </ion-app>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {TabsComponent} from './components/tabs/tabs.component';\nimport {HeaderComponent} from './components/header/header.component';\nimport {ViewKlausurComponent} from './components/view-klausur/view-klausur.component';\nimport {PostKlausurComponent} from './components/post-klausur/post-klausur.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { DropdownListComponent } from './components/dropdown-list/dropdown-list.component';\nimport { KlausurInputComponent } from './components/klausur-input/klausur-input.component';\nimport { KlausurDropdownSelectionComponent } from './components/klausur-dropdown-selection/klausur-dropdown-selection.component';\nimport { KlausurInputSelectionComponent } from './components/klausur-input-selection/klausur-input-selection.component';\nimport { PdfViewerComponent } from './components/pdf-viewer/pdf-viewer.component';\nimport { NgxExtendedPdfViewerModule } from 'ngx-extended-pdf-viewer';\nimport {IonicModule} from '@ionic/angular';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { SuccessComponent } from './components/success/success.component';\n\n\n\n@NgModule({\n  declarations: [\n    TabsComponent,\n    HeaderComponent,\n    ViewKlausurComponent,\n    PostKlausurComponent,\n    DropdownListComponent,\n    KlausurInputComponent,\n    KlausurDropdownSelectionComponent,\n    KlausurInputSelectionComponent,\n    PdfViewerComponent,\n    SuccessComponent\n  ],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatInputModule,\n    FormsModule,\n    HttpClientModule,\n    NgxExtendedPdfViewerModule,\n    IonicModule,\n    MatCheckboxModule\n  ], exports: [\n    TabsComponent,\n    HeaderComponent,\n    ViewKlausurComponent,\n    PostKlausurComponent\n  ]\n})\nexport class InteractionModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['./privacy-policy.component.css']\n})\nexport class PrivacyPolicyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ion-content>\n\n<div class=\"body\">\n<div class=\"ppContainer\">\n<h1>Privacy Policy for Klausuren App</h1>\n\n<p>At Klausuren App, accessible from klausuren-app.de, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by Klausuren App and how we use it.</p>\n\n<p>If you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us.</p>\n\n<p>This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in Klausuren App. This policy is not applicable to any information collected offline or via channels other than this website. Our Privacy Policy was created with the help of the <a href=\"https://www.generateprivacypolicy.com/\">Privacy Policy Generator</a>.</p>\n\n<h2>Consent</h2>\n\n<p>By using our website, you hereby consent to our Privacy Policy and agree to its terms.</p>\n\n<h2>Information we collect</h2>\n\n<p>The personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.</p>\n<p>If you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.</p>\n<p>When you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.</p>\n\n<h2>How we use your information</h2>\n\n<p>We use the information we collect in various ways, including to:</p>\n\n<ul>\n<li>Provide, operate, and maintain our website</li>\n<li>Improve, personalize, and expand our website</li>\n<li>Understand and analyze how you use our website</li>\n<li>Develop new products, services, features, and functionality</li>\n<li>Communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the website, and for marketing and promotional purposes</li>\n<li>Send you emails</li>\n<li>Find and prevent fraud</li>\n</ul>\n\n<h2>Log Files</h2>\n\n<p>Klausuren App follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website, and gathering demographic information.</p>\n\n\n\n\n<h2>Advertising Partners Privacy Policies</h2>\n\n<p>You may consult this list to find the Privacy Policy for each of the advertising partners of Klausuren App.</p>\n\n<p>Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on Klausuren App, which are sent directly to users' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.</p>\n\n<p>Note that Klausuren App has no access to or control over these cookies that are used by third-party advertisers.</p>\n\n<h2>Third Party Privacy Policies</h2>\n\n<p>Klausuren App's Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options. </p>\n\n<p>You can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers' respective websites.</p>\n\n<h2>CCPA Privacy Rights (Do Not Sell My Personal Information)</h2>\n\n<p>Under the CCPA, among other rights, California consumers have the right to:</p>\n<p>Request that a business that collects a consumer's personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.</p>\n<p>Request that a business delete any personal data about the consumer that a business has collected.</p>\n<p>Request that a business that sells a consumer's personal data, not sell the consumer's personal data.</p>\n<p>If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.</p>\n\n<h2>GDPR Data Protection Rights</h2>\n\n<p>We would like to make sure you are fully aware of all of your data protection rights. Every user is entitled to the following:</p>\n<p>The right to access – You have the right to request copies of your personal data. We may charge you a small fee for this service.</p>\n<p>The right to rectification – You have the right to request that we correct any information you believe is inaccurate. You also have the right to request that we complete the information you believe is incomplete.</p>\n<p>The right to erasure – You have the right to request that we erase your personal data, under certain conditions.</p>\n<p>The right to restrict processing – You have the right to request that we restrict the processing of your personal data, under certain conditions.</p>\n<p>The right to object to processing – You have the right to object to our processing of your personal data, under certain conditions.</p>\n<p>The right to data portability – You have the right to request that we transfer the data that we have collected to another organization, or directly to you, under certain conditions.</p>\n<p>If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.</p>\n\n<h2>Children's Information</h2>\n\n<p>Another part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.</p>\n\n<p>Klausuren App does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records.</p>\n</div>\n</div>\n</ion-content>","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","import { HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport {Klausur, KlausurenControllerService} from 'projects/klausuren-api/src';\nimport { Observable } from 'rxjs';\nimport {DropDownSelection} from '../../modules/drop-down-selection';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-view-klausur',\n  templateUrl: './view-klausur.component.html',\n  styleUrls: ['./view-klausur.component.css'],\n})\nexport class ViewKlausurComponent implements OnInit {\n\n  validInput = false;\n  dropDownSelection: DropDownSelection;\n  disableYear = true;\n  yearList = [];\n  selectedYear: string;\n  klausurID: string;\n  klausuren: Klausur[];\n  constructor(private router: Router, private klausurenAPI: KlausurenControllerService) {}\n\n\n\n\n  ngOnInit(): void {\n  }\n\n  onSelectionDone($event: DropDownSelection): void{\n    this.dropDownSelection = $event;\n    this.klausurenAPI.getAllKlausurenByStudiengangAndSemesterAndModul(this.dropDownSelection.studiengang,\n      this.dropDownSelection.semester, this.dropDownSelection.modul)\n    .subscribe(value => {\n      this.klausuren = value;\n      value.forEach(klausur => {\n        this.yearList.push(klausur.jahr);\n      });\n    });\n    this.disableYear = false;\n  }\n\n\n  getKlausur(): void{\n    const idArray = this.klausuren.filter(value => value.jahr === this.selectedYear);\n    const id = idArray[0].id;\n    this.router.navigate(['klausuren/klausur'], {queryParams: {id}});\n  }\n\n\n  selectionChanged($event: string): void {\n    this.validInput = true;\n    this.selectedYear = $event;\n  }\n}\n","<div class=\"body\">\n  <klausur-dropdown-selection (validInput)=\"onSelectionDone($event)\"></klausur-dropdown-selection>\n  <dropdown-list [list]=\"this.yearList\" [disabled]=\"disableYear\" [placeholder]=\"'Jahr'\" (selectionChanged)=\"selectionChanged($event)\"></dropdown-list>\n    <button mat-raised-button color=\"primary\" class=\"btn\" [disabled]=\"!this.validInput\" (click)=\"getKlausur()\">Klausuren Anfordern</button>\n    <div class=\"informationBox\">\n        <p class=\"informationText\">Du findest deinen Studiengang, dein Semester oder dein Modul nicht wieder? Dann sind für diese wahrscheinlich noch keine Klausuren vorhanden. Sorry!</p>\n    </div>\n\n</div>\n","/**\n * KlausurenService\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface Binary { \n    type?: string;\n    data?: Array<string>;\n}","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {LoginService} from './login-module/services/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private loginService: LoginService, private router: Router) {\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.loginService.loggedIn$){\n      console.log('ups, we will navigate you back!');\n      this.router.navigateByUrl('');\n    }\n    return this.loginService.loggedIn$;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login-module/components/login/login.component';\nimport { PostKlausurComponent } from './interaction-module/components/post-klausur/post-klausur.component';\nimport { RegisterEmailSendComponent } from './login-module/components/register-email-send/register-email-send.component';\nimport { RegisterPasswordComponent } from './login-module/components/register-password/register-password.component';\nimport { RegisterComponent } from './login-module/components/register/register.component';\nimport { ViewKlausurComponent } from './interaction-module/components/view-klausur/view-klausur.component';\nimport {AuthGuard} from './auth.guard';\nimport { PrivacyPolicyComponent } from './privacy-policy/privacy-policy.component';\nimport {PdfViewerComponent} from './interaction-module/components/pdf-viewer/pdf-viewer.component';\nimport {TabsComponent} from './interaction-module/components/tabs/tabs.component';\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'klausuren', component: TabsComponent, children: [\n      { path: 'view', component: ViewKlausurComponent, canActivate: [AuthGuard]},\n      { path: 'post', component: PostKlausurComponent, canActivate: [AuthGuard]},\n      {path: 'klausur', component: PdfViewerComponent, canActivate: [AuthGuard]},\n    ], canActivate: [AuthGuard]},\n  { path: 'register', component: RegisterComponent},\n  { path: 'register/send', component: RegisterEmailSendComponent},\n  { path: 'register/password', component: RegisterPasswordComponent},\n  { path: 'privacy-policy', component: PrivacyPolicyComponent},\n  {path: '**', component: LoginComponent}\n];;\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {KlausurenControllerService} from '../../../../../projects/klausuren-api/src';\nimport {DropDownSelection} from '../../modules/drop-down-selection';\n\n@Component({\n  selector: 'klausur-dropdown-selection',\n  templateUrl: './klausur-dropdown-selection.component.html',\n  styleUrls: ['./klausur-dropdown-selection.component.css']\n})\nexport class KlausurDropdownSelectionComponent implements OnInit {\n\n  constructor(public klausurenApi: KlausurenControllerService) { }\n  studiengang$: Observable<any>;\n  semester$: Observable<any>;\n  moduls$: Observable<any>;\n  currentStudiengang: string;\n  currentSemester: number;\n  currentModul: string;\n  @Output()\n  validInput = new EventEmitter<DropDownSelection>();\n\n  ngOnInit(): void {\n    this.studiengang$ = this.klausurenApi.getAllStudiengaenge();\n  }\n  getSemester($event): void{\n    this.currentStudiengang = $event;\n    this.semester$ = this.klausurenApi.getAllSemestersByStudiengang($event);\n  }\n  getModuls($event: string): void {\n    console.log('Neuer Wert in Semester: ' + $event);\n    this.currentSemester = +$event;\n    this.moduls$ = this.klausurenApi.getAllModuleByStudiengangAndSemester(this.currentStudiengang, this.currentSemester);\n  }\n  emitAll($event: string): void{\n    this.currentModul = $event;\n    this.validInput.emit({studiengang: this.currentStudiengang, semester: this.currentSemester, modul: this.currentModul});\n  }\n}\n","<dropdown-list (selectionChanged)=\"getSemester($event)\" [list]=\"this.studiengang$ | async\" placeholder=\"Studiengang\"></dropdown-list>\n<dropdown-list (selectionChanged)=\"getModuls($event)\" [list]=\"semester$ | async\" placeholder=\"Semester\"></dropdown-list>\n<dropdown-list (selectionChanged)=\"emitAll($event)\" [list]=\"moduls$ | async\" placeholder=\"Modul\"></dropdown-list>\n","<div class=body>\n    <div class=logo>\n               <!-- Generator: Adobe Illustrator 25.2.2, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\nviewBox=\"0 0 194 85.5\" style=\"enable-background:new 0 0 194 85.5;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n.st0{fill:#ffffff;}\n.st1{font-family:'OpenSans-Regular';}\n.st2{font-size:12px;}\n</style>\n<rect x=\"0\" y=\"0.1\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"0\" y=\"13.4\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"0\" y=\"26.7\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"0\" y=\"40.1\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"13.3\" y=\"6.7\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"13.3\" y=\"20.1\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"13.3\" y=\"33.4\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<rect x=\"13.3\" y=\"46.7\" class=\"st0\" width=\"36.7\" height=\"3.3\"/>\n<path class=\"st0\" d=\"M121.8,0.1h-3.5l-2.1,9.1c-0.1,0.5-0.3,1.3-0.5,2.1c-0.2,0.9-0.3,1.6-0.4,2.2c-0.1-0.6-0.2-1.4-0.4-2.2\nc-0.2-0.9-0.3-1.5-0.4-1.9l-2.4-9.3h-3.3l-2.4,9.3c-0.1,0.5-0.3,1.2-0.5,2.1c-0.2,0.9-0.3,1.6-0.3,2c-0.2-1.2-0.4-2.7-0.8-4.4\nl-2.1-9.1h-3.5l4.2,16.7h4l2.2-8.7c0.1-0.4,0.2-1,0.4-1.9c0.2-0.9,0.3-1.6,0.3-2c0,0.3,0.1,1,0.3,2c0.2,1,0.3,1.6,0.4,1.9l2.3,8.7h4\nL121.8,0.1z M87.4,9.8c1.2-3.8,1.9-6.2,2.2-7.2c0.1,0.3,0.2,0.6,0.3,1.1c0.1,0.5,0.8,2.5,1.9,6.1L87.4,9.8L87.4,9.8z M97.6,16.7\nL91.7,0h-4.3l-5.9,16.7h3.8l1.2-4h6.1l1.2,4H97.6z M77,0.1h-3.5v6.5h-6.6V0.1h-3.5v16.7h3.5V9.5h6.6v7.2H77C77,16.7,77,0.1,77,0.1z\"\n/>\n<path class=\"st0\" d=\"M187,37h3.2v3.5c-0.8,0.2-1.5,0.2-2.2,0.2c-1.4,0-2.5-0.5-3.2-1.4c-0.7-1-1.1-2.3-1.1-4.1\nc0-1.7,0.5-3.1,1.4-4.1c0.9-1,2.1-1.5,3.7-1.5c1.3,0,2.6,0.3,3.8,0.9l1.2-2.8c-1.6-0.7-3.2-1-4.9-1c-2.7,0-4.9,0.8-6.4,2.3\nc-1.5,1.5-2.3,3.6-2.3,6.3c0,2.8,0.7,4.9,2,6.4c1.3,1.5,3.2,2.2,5.8,2.2c1,0,2-0.1,2.9-0.2c0.9-0.1,2-0.4,3-0.7v-8.6H187L187,37\nL187,37z M169,37l4,6.4h3.9c-0.8-1.1-2.4-3.5-4.9-7.3c1-0.4,1.8-1,2.3-1.8c0.5-0.8,0.8-1.6,0.8-2.6c0-1.7-0.5-2.9-1.6-3.8\nc-1.1-0.8-2.8-1.2-5-1.2h-4.9v16.7h3.5V37H169z M167.1,29.7h1.1c1.1,0,2,0.2,2.5,0.5c0.5,0.3,0.8,0.9,0.8,1.7c0,0.8-0.3,1.4-0.8,1.8\nc-0.5,0.4-1.4,0.6-2.5,0.6h-1.1V29.7z M153.9,26.8v10.2c0,1.3-0.3,2.2-0.8,2.8c-0.5,0.6-1.4,0.9-2.5,0.9c-1.2,0-2-0.3-2.6-0.9\nc-0.5-0.6-0.8-1.5-0.8-2.8V26.8h-3.5v10.7c0,1.9,0.6,3.4,1.8,4.5c1.2,1.1,2.8,1.6,5,1.6c1.4,0,2.7-0.2,3.7-0.7\nc1-0.5,1.8-1.2,2.4-2.1c0.6-0.9,0.8-2,0.8-3.2V26.8H153.9z M131.9,36.2c2,0,3,0.7,3,2.1c0,0.8-0.2,1.3-0.7,1.7\nc-0.5,0.4-1.2,0.6-2.2,0.6h-2.3v-4.3L131.9,36.2L131.9,36.2z M129.7,29.7h1.9c1,0,1.7,0.1,2.2,0.4c0.5,0.3,0.7,0.7,0.7,1.4\nc0,0.7-0.2,1.2-0.6,1.5c-0.4,0.3-1.1,0.4-2.1,0.4h-2.1V29.7z M126.1,43.4h6.2c1.9,0,3.4-0.4,4.5-1.3c1.1-0.9,1.6-2,1.6-3.6\nc0-1.1-0.2-1.9-0.7-2.6c-0.5-0.6-1.2-1.1-2.3-1.3v-0.1c0.8-0.1,1.4-0.5,1.9-1.2c0.5-0.6,0.7-1.5,0.7-2.4c0-1.5-0.5-2.5-1.6-3.2\nc-1.1-0.7-2.8-1-5.1-1h-5.2V43.4z M112.4,43.4l4.3-13h0.1c-0.1,2.1-0.1,3.4-0.2,3.9c0,0.5,0,0.9,0,1.3v7.9h3.3V26.8h-4.8l-4.2,12.7\nh-0.1l-3.9-12.7h-4.8v16.7h3.2v-7.7c0-0.9-0.1-2.7-0.2-5.3h0.1l4,13.1H112.4z M87.4,36.5c1.2-3.8,1.9-6.2,2.2-7.2\nc0.1,0.3,0.2,0.6,0.3,1.1c0.1,0.5,0.8,2.5,1.9,6.1L87.4,36.5L87.4,36.5z M97.6,43.4l-5.9-16.7h-4.3l-5.9,16.7h3.8l1.2-4h6.1l1.2,4\nH97.6z M77,26.8h-3.5v6.5h-6.6v-6.5h-3.5v16.7h3.5v-7.2h6.6v7.2H77C77,43.4,77,26.8,77,26.8z\"/>\n<rect x=\"63.2\" y=\"54.7\" class=\"st0\" width=\"53\" height=\"3.3\"/>\n<text transform=\"matrix(1.1183 0 0 1 70.1475 74.959)\" class=\"st0 st1 st2\">KLAUSUREN APP</text>\n</svg> \n       \n    </div>\n    <div class=\"disclaimer\">\n        <p>Aus Datenschutzgründen ist das Registrieren nur mit einer gültigen HAW Email-Adresse möglich. Bitte geben Sie ihre Email Adresse ein und warten Sie auf unsere Bestätigungsemail.</p>\n    </div>\n\n    <div class=\"emailField\">\n        <mat-form-field class=\"loginInput\">\n            <mat-label>E-Mail</mat-label>\n            <input id=\"email\" matInput [(ngModel)]=\"emailAddress\"  placeholder=\"Deine HAW E-Mail\" required>\n          </mat-form-field>\n          <p>@haw-hamburg.de</p>\n    </div>\n    <div *ngIf=\"validationFailed\" class=\"alert\">\n        <p>Nur HAW E-Mail Adressen erlaubt. Die Endung @haw-hamburg.de ist schon vorgegeben. Bitte gebe diese nicht noch mit an</p>\n    </div>\n    <button mat-raised-button color=\"primary\" style=\"width: 80vw; margin-top: 4vh;\" (click)=\"onClickRegister()\">Registrieren</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EMailControllerService } from '../../services/e-mail-controller.service';\nimport { RegisterService } from '../../services/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private emailService: EMailControllerService, private router: Router, public register: RegisterService) { }\n\n  emailAddress: String = \"\";\n  validationFailed: boolean = false;\n  ngOnInit(): void {\n  }\n\n  onClickRegister():void{\n    if (this.emailAddress.includes('@')){\n      this.validationFailed = true;\n      return;\n    }\n    console.log('emailServiceAufrufen');\n    this.emailService.postEmailToService(this.emailAddress + '@haw-hamburg.de');\n    this.router.navigate(['register/send']);\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst bootstrap = () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n};\n\nif(typeof window['cordova'] !== 'undefined'){\n  document.addEventListener('deviceready', bootstrap, false);\n}else {\n  bootstrap();\n}\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}